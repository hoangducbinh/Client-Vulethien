'use client'

import { useState, useEffect, useRef } from 'react'
import { motion } from 'framer-motion'
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card, CardContent } from "@/components/ui/card"
import { Search,ArrowRight, ChevronRight, Star, ShoppingBag, TrendingUp, Shield, Truck, Headphones, ChevronLeft, Facebook, Twitter, Instagram, Linkedin } from 'lucide-react'
import Link from 'next/link'
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Badge } from "@/components/ui/badge"
import { Bell, User, Heart, MapPin, Settings, LogOut } from 'lucide-react'
import Image from 'next/image'
import { useRouter } from 'next/navigation'

export default function Component() {
  const [searchQuery, setSearchQuery] = useState('')
  const [isOpen, setIsOpen] = useState(false)
  const [notificationCount, setNotificationCount] = useState(3)
  const [currentImageIndex, setCurrentImageIndex] = useState(0)
  const scrollContainerRef = useRef<HTMLDivElement>(null)

  const router = useRouter()

  const notifications = [
    { type: 'info', message: 'ƒê∆°n h√†ng DH-1235 ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n' },
    { type: 'success', message: '∆Øu ƒë√£i m·ªõi: Gi·∫£m 10% cho ƒë∆°n h√†ng tr√™n 10 tri·ªáu' },
    { type: 'warning', message: 'ƒê∆°n h√†ng DH-1230 ƒëang ƒë∆∞·ª£c giao, d·ª± ki·∫øn ƒë·∫øn trong h√¥m nay' },
  ]

  const categories = [
    { name: 'Th·ª±c ph·∫©m', icon: 'üçé', color: 'bg-red-100' },
    { name: 'ƒê·ªì u·ªëng', icon: 'ü•§', color: 'bg-blue-100' },
    { name: 'ƒê·ªì gia d·ª•ng', icon: 'üè†', color: 'bg-green-100' },
    { name: 'VƒÉn ph√≤ng ph·∫©m', icon: 'üìö', color: 'bg-yellow-100' },
    { name: 'ChƒÉm s√≥c c√° nh√¢n', icon: 'üß¥', color: 'bg-purple-100' },
    { name: 'ƒêi·ªán t·ª≠', icon: 'üì±', color: 'bg-indigo-100' },
  ]

  const heroImages = [
    '/ecommerce.png?height=400&width=800&text=∆Øu+ƒë√£i+m√πa+h√®',
    '/ecommerce-express.jpg?height=400&width=800&text=S·∫£n+ph·∫©m+m·ªõi',
  ]

  const featuredProducts = [
    { name: 'N∆∞·ªõc gi·∫£i kh√°t ABC', price: '120.000 ‚Ç´', unit: 'Th√πng', image: '/placeholder.png?height=150&width=150&text=N∆∞·ªõc+gi·∫£i+kh√°t+ABC' },
    { name: 'B√°nh k·∫πo XYZ', price: '85.000 ‚Ç´', unit: 'H·ªôp', image: '/placeholder.png?height=150&width=150&text=B√°nh+k·∫πo+XYZ' },
    { name: 'D·∫ßu ƒÉn DEF', price: '210.000 ‚Ç´', unit: 'Th√πng', image: '/placeholder.png?height=150&width=150&text=D·∫ßu+ƒÉn+DEF' },
    { name: 'M√¨ ƒÉn li·ªÅn GHI', price: '95.000 ‚Ç´', unit: 'Th√πng', image: '/placeholder.png?height=150&width=150&text=M√¨+ƒÉn+li·ªÅn+GHI' },
    { name: 'N∆∞·ªõc m·∫Øm JKL', price: '75.000 ‚Ç´', unit: 'Chai', image: '/placeholder.png?height=150&width=150&text=N∆∞·ªõc+m·∫Øm+JKL' },
    { name: 'Gia v·ªã MNO', price: '45.000 ‚Ç´', unit: 'H·ªôp', image: '/placeholder.png?height=150&width=150&text=Gia+v·ªã+MNO' },
    { name: 'ƒê·ªì u·ªëng PQR', price: '35.000 ‚Ç´', unit: 'Lon', image: '/placeholder.png?height=150&width=150&text=ƒê·ªì+u·ªëng+PQR' },
    { name: 'Snack STU', price: '25.000 ‚Ç´', unit: 'G√≥i', image: '/placeholder.png?height=150&width=150&text=Snack+STU' },
  ]

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % heroImages.length)
    }, 5000)
    return () => clearInterval(interval)
  }, [])

  const scrollLeft = () => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ left: -200, behavior: 'smooth' })
    }
  }

  const scrollRight = () => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ left: 200, behavior: 'smooth' })
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white">
      <header className="bg-white shadow-sm sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <Link href="/" className="flex items-center space-x-2">
            <ShoppingBag className="h-8 w-8 text-blue-600" />
            <h1 className="text-2xl font-bold text-blue-600">EasyShop</h1>
          </Link>
          <div className="flex items-center gap-4">
            <Button onClick={() => router.push('/shopping')}>
              <ShoppingBag className="mr-2 h-4 w-4" />
              Gi·ªè h√†ng
            </Button>
            <DropdownMenu open={isOpen} onOpenChange={setIsOpen}>
              <DropdownMenuTrigger asChild>
                <Button variant="outline" size="icon" className="relative">
                  <Bell className="h-4 w-4" />
                  {notificationCount > 0 && (
                    <Badge variant="destructive" className="absolute -top-1 -right-1 px-1 min-w-[1.25rem] h-5">
                      {notificationCount}
                    </Badge>
                  )}
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end" className="w-80">
                <DropdownMenuLabel>Th√¥ng b√°o</DropdownMenuLabel>
                <DropdownMenuSeparator />
                {notifications.map((notification, index) => (
                  <DropdownMenuItem key={index}>
                    <Bell className={`mr-2 h-4 w-4 ${
                      notification.type === 'info' ? 'text-blue-500' :
                      notification.type === 'success' ? 'text-green-500' : 'text-yellow-500'
                    }`} />
                    <span>{notification.message}</span>
                  </DropdownMenuItem>
                ))}
                <DropdownMenuSeparator />
                <DropdownMenuItem className="justify-center font-medium">
                  Xem t·∫•t c·∫£ th√¥ng b√°o
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" className="relative h-8 w-8 rounded-full">
                  <Avatar className="h-8 w-8">
                    <AvatarImage src="/facebook.svg" alt="@customer" />
                    <AvatarFallback></AvatarFallback>
                  </Avatar>
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent className="w-56" align="end" forceMount>
                <DropdownMenuLabel className="font-normal">
                  <div className="flex flex-col space-y-1">
                    <p className="text-sm font-medium leading-none">Ho√†ng ƒê·ª©c B√¨nh</p>
                    <p className="text-xs leading-none text-muted-foreground">
                      customer@abc.com
                    </p>
                  </div>
                </DropdownMenuLabel>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <User className="mr-2 h-4 w-4" />
                  <span>Th√¥ng tin t√†i kho·∫£n</span>
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <ShoppingBag className="mr-2 h-4 w-4" />
                  <span>L·ªãch s·ª≠ ƒë∆°n h√†ng</span>
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <Heart className="mr-2 h-4 w-4" />
                  <span>S·∫£n ph·∫©m y√™u th√≠ch</span>
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <MapPin className="mr-2 h-4 w-4" />
                  <span>ƒê·ªãa ch·ªâ giao h√†ng</span>
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <Settings className="mr-2 h-4 w-4" />
                  <span>C√†i ƒë·∫∑t</span>
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <LogOut className="mr-2 h-4 w-4" />
                  <span>ƒêƒÉng xu·∫•t</span>
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        </div>
      </header>
      
      <main className="container mx-auto px-4 py-8">
        <section className="mb-12 relative overflow-hidden rounded-lg shadow-2xl">
          <motion.div
            key={currentImageIndex}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.5 }}
            className="relative h-[400px]"
          >
            <Image
              src={heroImages[currentImageIndex]}
              alt="Hero image"
              layout="fill"
              objectFit="cover"
            />
            <div className="absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center">
              <div className="text-center">
                <motion.h2 
                  initial={{ y: 20, opacity: 0 }}
                  animate={{ y: 0, opacity: 1 }}
                  transition={{ delay: 0.2 }}
                  className="text-4xl md:text-5xl font-bold text-white mb-4"
                >
                  Ch√†o m·ª´ng ƒë·∫øn v·ªõi EasyShop
                </motion.h2>
                <motion.p 
                  initial={{ y: 20, opacity: 0 }}
                  animate={{ y: 0, opacity: 1 }}
                  transition={{ delay: 0.4 }}
                  className="text-xl text-white mb-8"
                >
                  Kh√°m ph√° ∆∞u ƒë√£i ƒë·∫∑c bi·ªát v√† s·∫£n ph·∫©m m·ªõi nh·∫•t
                </motion.p>
                <motion.div
                  initial={{ y: 20, opacity: 0 }}
                  animate={{ y: 0, opacity: 1 }}
                  transition={{ delay: 0.6 }}
                >
                  <Button size="lg" variant="secondary">Mua s·∫Øm ngay</Button>
                </motion.div>
              </div>
            </div>
          </motion.div>
        </section>

        <div className="mb-12">
          <div className="relative max-w-2xl mx-auto">
            <Search className="absolute left-4 top-3.5 h-5 w-5 text-gray-400" />
            <Input
              type="search"
              placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="pl-12 pr-4 w-full h-14 text-lg rounded-full border-2 border-gray-200 focus:border-blue-500 transition-colors"
            />
          </div>
        </div>

        <section className="mb-16">
          <h2 className="text-3xl font-bold mb-8 text-center">Danh m·ª•c s·∫£n ph·∫©m</h2>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6">
            {categories.map((category, index) => (
              <motion.div
                key={index}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <Card className={`hover:shadow-lg transition-all duration-300 cursor-pointer ${category.color} border-none`}>
                  <CardContent className="flex flex-col items-center justify-center p-6">
                    <span className="text-5xl mb-4">{category.icon}</span>
                    <h3 className="font-semibold text-center text-gray-800">{category.name}</h3>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </section>

        <section className="mb-16">
          <div className="flex justify-between items-center mb-8">
            <h2 className="text-3xl font-bold">S·∫£n ph·∫©m n·ªïi b·∫≠t</h2>
            <div className="flex gap-2">
              <Button variant="outline" size="icon" onClick={scrollLeft} className="rounded-full">
                <ChevronLeft className="h-6 w-6" />
              </Button>
              <Button variant="outline" size="icon" onClick={scrollRight} className="rounded-full">
                <ChevronRight className="h-6 w-6" />
              </Button>
            </div>
          </div>
          <div className="relative overflow-hidden">
            <div ref={scrollContainerRef} className="flex overflow-x-auto scrollbar-hide space-x-6 pb-6">
              {featuredProducts.map((product, index) => (
                <motion.div
                  key={index}
                  className="flex-shrink-0 w-64"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Card className="h-full shadow-lg hover:shadow-xl transition-shadow duration-300">
                    <CardContent className="p-4 flex flex-col h-full">
                      <div className="aspect-square relative mb-4 rounded-lg overflow-hidden">
                        <Image
                          src={product.image}
                          alt={product.name}
                          layout="fill"
                          objectFit="cover"
                          className="transition-transform duration-300 hover:scale-110"
                        />
                      </div>
                      <h3 className="font-semibold mb-2 text-lg line-clamp-2">{product.name}</h3>
                      <div className="mt-auto">
                        <p className="text-xl font-bold text-blue-600">{product.price}</p>
                        <p className="text-sm text-gray-500 mb-4">/{product.unit}</p>
                        <Button className="w-full" size="lg">
                          <ShoppingBag className="mr-2 h-5 w-5" />
                          Th√™m v√†o gi·ªè
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        <section className="mb-12">
          <h2 className="text-2xl font-bold mb-6">∆Øu ƒë√£i ƒë·∫∑c bi·ªát</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <motion.div whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.97 }}>
              <Card className="bg-gradient-to-r from-purple-500 to-pink-500 text-white overflow-hidden">
                <CardContent className="p-6 flex items-center">
                  <div className="flex-1">
                    <h3 className="text-xl font-bold mb-2">Gi·∫£m 20% cho ƒë∆°n h√†ng ƒë·∫ßu ti√™n</h3>
                    <p className="mb-4">√Åp d·ª•ng cho t·∫•t c·∫£ s·∫£n ph·∫©m. H·∫°n s·ª≠ d·ª•ng: 30/06/2023</p>
                    <Button variant="secondary">S·ª≠ d·ª•ng ngay</Button>
                  </div>
                  <div className="hidden md:block">
                    <Image src="/placeholder.svg?height=150&width=150&text=20%" width={150} height={150} alt="Discount" />
                  </div>
                </CardContent>
              </Card>
            </motion.div>
            <motion.div whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.97 }}>
              <Card className="bg-gradient-to-r from-yellow-400 to-orange-500 text-white overflow-hidden">
                <CardContent className="p-6 flex items-center">
                  <div className="flex-1">
                    <h3 className="text-xl font-bold mb-2">Freeship cho ƒë∆°n t·ª´ 500.000ƒë</h3>
                    <p className="mb-4">√Åp d·ª•ng cho t·∫•t c·∫£ khu v·ª±c. Kh√¥ng gi·ªõi h·∫°n s·ªë l·∫ßn s·ª≠ d·ª•ng</p>
                    <Button variant="secondary">T√¨m hi·ªÉu th√™m</Button>
                  </div>
                  <div className="hidden md:block">
                    <Image src="/placeholder.svg?height=150&width=150&text=Free+Ship" width={150} height={150} alt="Free Shipping" />
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          </div>
        </section>

        <section className="mb-12">
          <h2 className="text-2xl font-bold mb-6">T·∫°i sao ch·ªçn ch√∫ng t√¥i?</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {[
              { icon: <TrendingUp className="h-8 w-8" />, title: "Gi√° c·∫£ c·∫°nh tranh", description: "Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn gi√° t·ªët nh·∫•t cho b·∫°n" },
              { icon: <Shield className="h-8 w-8" />, title: "ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng", description: "T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu ƒë∆∞·ª£c ki·ªÉm tra k·ªπ l∆∞·ª°ng" },
              { icon: <Truck className="h-8 w-8" />, title: "Giao h√†ng nhanh ch√≥ng", description: "ƒê∆°n h√†ng ƒë∆∞·ª£c x·ª≠ l√Ω v√† giao trong 24h" },
              { icon: <Headphones className="h-8 w-8" />, title: "H·ªó tr·ª£ 24/7", description: "ƒê·ªôi ng≈© chƒÉm s√≥c kh√°ch h√†ng lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n" },
            ].map((item, index) => (
              <motion.div
                key={index}
                whileHover={{ y: -5 }}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
              >
                <Card>
                  <CardContent className="p-6 flex flex-col items-center text-center">
                    <div className="mb-4 text-blue-500">{item.icon}</div>
                    <h3 className="font-semibold mb-2">{item.title}</h3>
                    <p className="text-sm text-muted-foreground">{item.description}</p>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </section>

        <section className="mb-12">
          <h2 className="text-2xl font-bold mb-6">ƒê√°nh gi√° t·ª´ kh√°ch h√†ng</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[
              { name: 'Nguy·ªÖn VƒÉn A', comment: 'S·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng, giao h√†ng nhanh!', rating: 5, avatar: '/placeholder.svg?height=50&width=50&text=NVA' },
              { name: 'Tr·∫ßn Th·ªã B', comment: 'D·ªãch v·ª• kh√°ch h√†ng tuy·ªát v·ªùi, s·∫Ω ·ªßng h·ªô ti·∫øp!', rating: 4, avatar: '/placeholder.svg?height=50&width=50&text=TTB' },
              { name: 'L√™ VƒÉn C', comment: 'Gi√° c·∫£ h·ª£p l√Ω, ƒë√≥ng g√≥i c·∫©n th·∫≠n.', rating: 5, avatar: '/placeholder.svg?height=50&width=50&text=LVC' },
            ].map((review, index) => (
              <motion.div key={index} whileHover={{ y: -5 }}>
                <Card>
                  <CardContent className="p-6">
                    <div className="flex items-center mb-4">
                      <Avatar className="h-10 w-10 mr-4">
                        <AvatarImage src={review.avatar} alt={review.name} />
                        <AvatarFallback>{review.name.charAt(0)}</AvatarFallback>
                      </Avatar>
                      <div>
                        <h3 className="font-semibold">{review.name}</h3>
                        <div className="flex">
                          {[...Array(5)].map((_, i) => (
                            <Star key={i} className={`h-4 w-4 ${i < review.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}`} />
                          ))}
                        </div>
                      </div>
                    </div>
                    <p className="text-muted-foreground italic">{review.comment}</p>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </section>

        <section className="mb-16">
          <Card className="bg-gradient-to-r from-blue-600 to-blue-400 text-white overflow-hidden shadow-lg">
            <CardContent className="p-12 flex flex-col md:flex-row items-center justify-between">
              <div className="mb-8 md:mb-0 md:mr-8 text-center md:text-left">
                <h2 className="text-4xl font-bold mb-4">ƒêƒÉng k√Ω nh·∫≠n th√¥ng tin ∆∞u ƒë√£i</h2>
                <p className="text-xl mb-4">Nh·∫≠n ngay ∆∞u ƒë√£i ƒë·∫∑c bi·ªát v√† c·∫≠p nh·∫≠t m·ªõi nh·∫•t v·ªÅ s·∫£n ph·∫©m!</p>
              </div>
              <div className="flex w-full md:w-auto">
                <Input type="email" placeholder="Nh·∫≠p email c·ªßa b·∫°n" className="rounded-r-none text-black py-6 min-w-[300px]" />
                <Button variant="secondary" size="lg" className="rounded-l-none text-blue-600">
                  ƒêƒÉng k√Ω
                  <ArrowRight className="ml-2 h-5 w-5" />
                </Button>
              </div>
            </CardContent>
          </Card>
        </section>
      </main>

      <footer className="bg-gray-900 text-white py-16">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-12">
            <div>
              <h3 className="text-xl font-semibold mb-6">V·ªÅ ch√∫ng t√¥i</h3>
              <p className="text-gray-400">EasyShop - N·ªÅn t·∫£ng mua s·∫Øm B2B h√†ng ƒë·∫ßu cho doanh nghi·ªáp c·ªßa b·∫°n.</p>
            </div>
            <div>
              <h3 className="text-xl font-semibold mb-6">Li√™n k·∫øt nhanh</h3>
              <ul className="space-y-2">
                <li><Link href="#" className="text-gray-400 hover:text-white transition-colors">ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</Link></li>
                <li><Link href="#" className="text-gray-400 hover:text-white transition-colors">Ch√≠nh s√°ch b·∫£o m·∫≠t</Link></li>
                <li><Link href="#" className="text-gray-400 hover:text-white transition-colors">Trung t√¢m h·ªó tr·ª£</Link></li>
                <li><Link href="#" className="text-gray-400 hover:text-white transition-colors">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</Link></li>
              </ul>
            </div>
            <div>
              <h3 className="text-xl font-semibold mb-6">Li√™n h·ªá</h3>
              <p className="text-gray-400">Email: support@easyshop.com</p>
              <p className="text-gray-400">Hotline: 1900 1234</p>
              <p className="text-gray-400">ƒê·ªãa ch·ªâ: 123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP. H·ªì Ch√≠ Minh</p>
            </div>
            <div>
              <h3 className="text-xl font-semibold mb-6">K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i</h3>
              <div className="flex space-x-4">
                <Link href="#" className="text-gray-400 hover:text-white transition-colors">
                  <Facebook className="h-6 w-6" />
                </Link>
                <Link href="#" className="text-gray-400 hover:text-white transition-colors">
                  <Twitter className="h-6 w-6" />
                </Link>
                <Link href="#" className="text-gray-400 hover:text-white transition-colors">
                  <Instagram className="h-6 w-6" />
                </Link>
                <Link href="#" className="text-gray-400 hover:text-white transition-colors">
                  <Linkedin className="h-6 w-6" />
                </Link>
              </div>
            </div>
          </div>
          <div className="mt-12 pt-8 border-t border-gray-800 text-center text-gray-400">
            <p>&copy; 2023 EasyShop. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </footer>
    </div>
  )
}